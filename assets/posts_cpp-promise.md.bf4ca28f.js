import{_ as s,o as n,c as a,a as p}from"./app.a1f6b5b3.js";const b=JSON.parse('{"title":"c++ promise future \u521D\u4F53\u9A8C","description":"","frontmatter":{"title":"c++ promise future \u521D\u4F53\u9A8C","date":"2022-06-29T22:07:00.000Z","tags":["c++","\u7B14\u8BB0","\u5F02\u6B65"]},"headers":[{"level":2,"title":"\u4E3A\u4EC0\u4E48\u8981\u7528 promise \u548C future","slug":"\u4E3A\u4EC0\u4E48\u8981\u7528-promise-\u548C-future","link":"#\u4E3A\u4EC0\u4E48\u8981\u7528-promise-\u548C-future","children":[]},{"level":2,"title":"future","slug":"future","link":"#future","children":[]},{"level":2,"title":"promise","slug":"promise","link":"#promise","children":[]},{"level":2,"title":"\u53CD\u5411\u601D\u8003","slug":"\u53CD\u5411\u601D\u8003","link":"#\u53CD\u5411\u601D\u8003","children":[]}],"relativePath":"posts/cpp-promise.md"}'),l={name:"posts/cpp-promise.md"},e=p(`<p>\u7406\u89E3\u4E86 python \u7684 promise \u548C future\uFF0C\u987A\u4FBF\u518D\u770B\u770B c++ \u7684\u3002</p><hr><h2 id="\u4E3A\u4EC0\u4E48\u8981\u7528-promise-\u548C-future" tabindex="-1">\u4E3A\u4EC0\u4E48\u8981\u7528 promise \u548C future <a class="header-anchor" href="#\u4E3A\u4EC0\u4E48\u8981\u7528-promise-\u548C-future" aria-hidden="true">#</a></h2><p>\u6B64\u524D\uFF0C\u6211\u4EEC\u8DE8\u7EBF\u7A0B\u4F20\u9012\u6570\u636E\u57FA\u672C\u662F\u4F7F\u7528\u6D88\u606F\u961F\u5217\uFF0C\u4EE3\u7801\u6BD4\u8F83\u590D\u6742\uFF0C\u8FD8\u8981\u8003\u8651\u7EBF\u7A0B\u5B89\u5168\u95EE\u9898\u3002</p><p><code>future</code> \u548C <code>promise</code> \u7684\u4F5C\u7528\u4E5F\u662F\u5728\u4E0D\u540C\u7EBF\u7A0B\u4E4B\u95F4\u4F20\u9012\u6570\u636E\uFF0C\u4EE3\u7801\u66F4\u7B80\u6D01\u3002</p><p><code>promise</code> \u5927\u6982\u662F\u4E2A\u627F\u8BFA\uFF0C\u8868\u793A\u6211\u5C06\u653E\u6570\u636E\u8FDB\u53BB\uFF0C<code>future</code> \u8868\u793A\u5C06\u6765\u4F1A\u6709\u6570\u636E\u8FC7\u6765\u3002</p><h2 id="future" tabindex="-1">future <a class="header-anchor" href="#future" aria-hidden="true">#</a></h2><p>\u5148\u770B\u770B <code>future</code> \u662F\u5982\u4F55\u4F7F\u7528\u7684</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#CF222E;">#include</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&lt;future&gt;</span></span>
<span class="line"><span style="color:#CF222E;">#include</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#CF222E;">using</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">namespace</span><span style="color:#24292F;"> </span><span style="color:#953800;">std</span><span style="color:#24292F;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CF222E;">int</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">factorial</span><span style="color:#24292F;">(</span><span style="color:#CF222E;">int</span><span style="color:#24292F;"> </span><span style="color:#953800;">N</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">int</span><span style="color:#24292F;"> res </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">1</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">for</span><span style="color:#24292F;"> (</span><span style="color:#CF222E;">int</span><span style="color:#24292F;"> i </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> N; i </span><span style="color:#CF222E;">&gt;</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">1</span><span style="color:#24292F;">; i</span><span style="color:#CF222E;">--</span><span style="color:#24292F;">) res </span><span style="color:#CF222E;">*=</span><span style="color:#24292F;"> i;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> res;</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CF222E;">int</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">main</span><span style="color:#24292F;">() {</span></span>
<span class="line"><span style="color:#24292F;">    future</span><span style="color:#CF222E;">&lt;int&gt;</span><span style="color:#24292F;"> f </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">async</span><span style="color:#24292F;">(factorial, </span><span style="color:#0550AE;">10</span><span style="color:#24292F;">);</span></span>
<span class="line"><span style="color:#24292F;">    cout </span><span style="color:#CF222E;">&lt;&lt;</span><span style="color:#24292F;"> f.</span><span style="color:#8250DF;">get</span><span style="color:#24292F;">() </span><span style="color:#CF222E;">&lt;&lt;</span><span style="color:#24292F;"> endl;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">0</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br></div></div><p>\u8FD9\u662F\u4E00\u4E2A\u6700\u7B80\u5355\u7684\u4F8B\u5B50\uFF0C<code>async</code> \u5C06\u542F\u52A8\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u6267\u884C\u51FD\u6570\uFF0C\u628A\u53C2\u6570\u4F20\u5165\uFF0C\u8FD4\u56DE\u4E00\u4E2A <code>future</code> \u5BF9\u8C61\uFF0C\u8868\u793A\u6B64\u65F6\u6211\u4EEC\u8FD8\u6CA1\u6709\u83B7\u5F97\u51FD\u6570\u6267\u884C\u7ED3\u679C\uFF0C\u4F46\u662F\u53EF\u4EE5\u5728\u5C06\u6765\u62FF\u5230\u3002</p><p>\u5176\u4E2D async \u51FD\u6570\u7701\u7565\u4E86\u7B2C\u4E00\u4E2A\u53C2\u6570\uFF0C\u9ED8\u8BA4\u662F</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#24292F;">    future</span><span style="color:#CF222E;">&lt;int&gt;</span><span style="color:#24292F;"> f </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">async</span><span style="color:#24292F;">(</span><span style="color:#953800;">launch</span><span style="color:#24292F;">::async</span><span style="color:#CF222E;">|</span><span style="color:#953800;">launch</span><span style="color:#24292F;">::deferred, factorial, </span><span style="color:#0550AE;">10</span><span style="color:#24292F;">);</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u4E24\u4E2A\u503C\u7684\u542B\u4E49\u662F\uFF1A</p><ul><li><code>launch::async</code> \u81EA\u52A8\u521B\u5EFA\u4E00\u4E2A\u7EBF\u7A0B\uFF0C\u542F\u52A8\u5F02\u6B65\u4EFB\u52A1\u3002</li><li><code>launch::deferred</code> \u7EBF\u7A0B\u7684\u6267\u884C\u5C31\u4F1A\u63A8\u8FDF\u5230 <code>future.get()</code> \u65B9\u6CD5\u65F6\u624D\u4F1A\u542F\u52A8\uFF0C\u5982\u679C\u4E0D\u4F7F\u7528 <code>get</code> \u6216\u8005 <code>wait</code>\uFF0C\u7EBF\u7A0B\u76F4\u63A5\u7ED3\u675F\u3002</li></ul><p>\u6211\u4EEC\u53EF\u4EE5\u901A\u8FC7 <code>get</code> \u65B9\u6CD5\u83B7\u5F97\u51FD\u6570\u6267\u884C\u7ED3\u679C\uFF0C\u8FD9\u4E2A\u65B9\u6CD5\u4F1A\u7B49\u5F85\u51FD\u6570\u6267\u884C\u5B8C\u6210\uFF0C\u7136\u540E\u8FD4\u56DE\u51FD\u6570\u7684\u8FD4\u56DE\u503C\u3002</p><p>\u6CE8\u610F\u5230\u6211\u4EEC\u8FD9\u91CC\u6211\u4EEC\u76F4\u63A5\u628A <code>factorial</code> \u7684\u53C2\u6570 <code>10</code> \u4F20\u8FDB\u53BB\u4E86\uFF0C\u5982\u679C\u6211\u4EEC\u76EE\u524D\u6CA1\u6709\u8FD9\u4E2A\u53C2\u6570\uFF0C\u60F3\u5728\u4E4B\u540E\u4F20\u8FDB\u53BB\uFF0C\u5C31\u53EF\u4EE5\u4F7F\u7528 <code>promise</code> \u6765\u5B9E\u73B0\u3002</p><h2 id="promise" tabindex="-1">promise <a class="header-anchor" href="#promise" aria-hidden="true">#</a></h2><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#CF222E;">#include</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&lt;future&gt;</span></span>
<span class="line"><span style="color:#CF222E;">#include</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#CF222E;">using</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">namespace</span><span style="color:#24292F;"> </span><span style="color:#953800;">std</span><span style="color:#24292F;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CF222E;">int</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">factorial</span><span style="color:#24292F;">(</span><span style="color:#953800;">future</span><span style="color:#24292F;">&lt;</span><span style="color:#CF222E;">int</span><span style="color:#24292F;">&gt;</span><span style="color:#CF222E;">&amp;</span><span style="color:#24292F;"> </span><span style="color:#953800;">f</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">int</span><span style="color:#24292F;"> res </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">1</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">int</span><span style="color:#24292F;"> N </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> f.</span><span style="color:#8250DF;">get</span><span style="color:#24292F;">();</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">for</span><span style="color:#24292F;"> (</span><span style="color:#CF222E;">int</span><span style="color:#24292F;"> i </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> N; i </span><span style="color:#CF222E;">&gt;</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">1</span><span style="color:#24292F;">; i</span><span style="color:#CF222E;">--</span><span style="color:#24292F;">) res </span><span style="color:#CF222E;">*=</span><span style="color:#24292F;"> i;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> res;</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CF222E;">int</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">main</span><span style="color:#24292F;">() {</span></span>
<span class="line"><span style="color:#24292F;">    promise</span><span style="color:#CF222E;">&lt;int&gt;</span><span style="color:#24292F;"> p;</span></span>
<span class="line"><span style="color:#24292F;">    future</span><span style="color:#CF222E;">&lt;int&gt;</span><span style="color:#24292F;"> f </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> p.</span><span style="color:#8250DF;">get_future</span><span style="color:#24292F;">();</span></span>
<span class="line"><span style="color:#24292F;">    future</span><span style="color:#CF222E;">&lt;int&gt;</span><span style="color:#24292F;"> f2 </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">async</span><span style="color:#24292F;">(factorial, </span><span style="color:#8250DF;">ref</span><span style="color:#24292F;">(f));</span></span>
<span class="line"><span style="color:#24292F;">    p.</span><span style="color:#8250DF;">set_value</span><span style="color:#24292F;">(</span><span style="color:#0550AE;">10</span><span style="color:#24292F;">);</span></span>
<span class="line"><span style="color:#24292F;">    cout </span><span style="color:#CF222E;">&lt;&lt;</span><span style="color:#24292F;"> f2.</span><span style="color:#8250DF;">get</span><span style="color:#24292F;">() </span><span style="color:#CF222E;">&lt;&lt;</span><span style="color:#24292F;"> endl;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">0</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div><p>\u4E8E\u662F\u8FD9\u91CC\u51FA\u73B0\u4E86\u4E24\u4E2A <code>future</code>\uFF1A</p><ul><li>\u7B2C\u4E00\u4E2A\u662F\u548C <code>promise</code> \u5BF9\u5E94\u7684\uFF0C\u76F8\u5F53\u4E8E\u7BA1\u9053\u7684\u4E24\u7AEF\u3002\u6211\u4EEC\u627F\u8BFA\u5C06\u6765\u4F1A\u4F20\u6570\u636E\u8FDB\u53BB\uFF0C\u7136\u540E\u628A\u5BF9\u5E94\u7684 <code>future</code> \uFF08\u4E5F\u5C31\u662F\u7BA1\u9053\u51FA\u53E3\uFF09\u4EA4\u7ED9\u53E6\u4E00\u4E2A\u7EBF\u7A0B\u3002</li><li>\u7B2C\u4E8C\u4E2A\u662F <code>factorial</code> \u8FD4\u56DE\u7ED3\u679C\u7684\u51FA\u53E3\uFF0C\u540C\u7B2C\u4E00\u4E2A\u4F8B\u5B50\uFF0C\u6211\u4EEC\u6682\u65F6\u62FF\u4E0D\u5230\u3002</li></ul><p>\u4F46\u8FD9\u91CC\u7684 <code>ref</code> \u662F\u4EC0\u4E48\u4E1C\u897F\uFF1F\u5176\u5B9E\u5C31\u662F\u5F15\u7528\uFF0C\u8FD9\u91CC <code>ref(f)</code> \u7684\u7C7B\u578B\u76F8\u5F53\u4E8E\u4E0A\u9762\u7684 <code>future&lt;int&gt;&amp;</code>\u3002</p><p>\u6211\u4EEC\u77E5\u9053 C++ \u4E2D\u672C\u6765\u5C31\u6709\u5F15\u7528\u7684\u5B58\u5728\uFF0C\u4E3A\u4F55 C++11 \u4E2D\u8FD8\u8981\u5F15\u5165\u4E00\u4E2A <code>std::ref</code>\uFF1F\u4E3B\u8981\u662F\u8003\u8651\u51FD\u6570\u5F0F\u7F16\u7A0B\uFF08\u5982 <code>std::bind</code>\uFF09\u5728\u4F7F\u7528\u65F6\uFF0C\u662F\u5BF9\u53C2\u6570\u76F4\u63A5\u62F7\u8D1D\uFF0C\u800C\u4E0D\u662F\u5F15\u7528\u3002</p><p>\u518D\u770B <code>factorial</code> \u51FD\u6570\u91CC\uFF0C\u6211\u4EEC\u53EF\u4EE5\u7528 <code>future.get()</code> \u6765\u83B7\u5F97\u5C06\u6765\u4F20\u8FC7\u6765\u7684\u53C2\u6570\uFF0C\u7136\u540E\u518D\u7EE7\u7EED\u6267\u884C\u3002</p><p>\u56DE\u5230\u4E3B\u51FD\u6570\uFF0C\u6211\u4EEC\u9996\u5148\u901A\u8FC7 <code>promise.set_value()</code> \u628A\u6570\u636E\u4F20\u8FC7\u53BB\uFF0C\u7136\u540E\u6211\u4EEC\u5C31\u53EF\u4EE5\u4F7F\u7528 <code>get</code> \u4ECE\u7B2C\u4E8C\u4E2A <code>future</code> \u4E2D\u83B7\u5F97\u7ED3\u679C\u4E86\u3002</p><h2 id="\u53CD\u5411\u601D\u8003" tabindex="-1">\u53CD\u5411\u601D\u8003 <a class="header-anchor" href="#\u53CD\u5411\u601D\u8003" aria-hidden="true">#</a></h2><p>\u5199\u5230\u8FD9\u91CC\u6211\u60F3\u5230\u4E00\u4E2A\u95EE\u9898\uFF0C\u80FD\u4E0D\u80FD\u7528 promise \u628A\u8BA1\u7B97\u7ED3\u679C\u4F20\u56DE\u6765\uFF1F</p><p>\u53EF\u4EE5\uFF01</p><div class="language-cpp line-numbers-mode"><button class="copy"></button><span class="lang">cpp</span><pre><code><span class="line"><span style="color:#CF222E;">#include</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&lt;future&gt;</span></span>
<span class="line"><span style="color:#CF222E;">#include</span><span style="color:#24292F;"> </span><span style="color:#0A3069;">&lt;iostream&gt;</span></span>
<span class="line"><span style="color:#CF222E;">using</span><span style="color:#24292F;"> </span><span style="color:#CF222E;">namespace</span><span style="color:#24292F;"> </span><span style="color:#953800;">std</span><span style="color:#24292F;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CF222E;">void</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">add</span><span style="color:#24292F;">(</span><span style="color:#953800;">promise</span><span style="color:#24292F;">&lt;</span><span style="color:#CF222E;">int</span><span style="color:#24292F;">&gt;</span><span style="color:#CF222E;">&amp;</span><span style="color:#24292F;"> </span><span style="color:#953800;">p</span><span style="color:#24292F;">, </span><span style="color:#CF222E;">int</span><span style="color:#24292F;"> </span><span style="color:#953800;">a</span><span style="color:#24292F;">, </span><span style="color:#CF222E;">int</span><span style="color:#24292F;"> </span><span style="color:#953800;">b</span><span style="color:#24292F;">) {</span></span>
<span class="line"><span style="color:#24292F;">    p.</span><span style="color:#8250DF;">set_value</span><span style="color:#24292F;">(a </span><span style="color:#CF222E;">+</span><span style="color:#24292F;"> b);</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CF222E;">int</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">main</span><span style="color:#24292F;">() {</span></span>
<span class="line"><span style="color:#24292F;">    promise</span><span style="color:#CF222E;">&lt;int&gt;</span><span style="color:#24292F;"> p;</span></span>
<span class="line"><span style="color:#24292F;">    future</span><span style="color:#CF222E;">&lt;void&gt;</span><span style="color:#24292F;"> f </span><span style="color:#CF222E;">=</span><span style="color:#24292F;"> </span><span style="color:#8250DF;">async</span><span style="color:#24292F;">(add, </span><span style="color:#8250DF;">ref</span><span style="color:#24292F;">(p), </span><span style="color:#0550AE;">114</span><span style="color:#24292F;">, </span><span style="color:#0550AE;">514</span><span style="color:#24292F;">);</span></span>
<span class="line"><span style="color:#24292F;">    cout </span><span style="color:#CF222E;">&lt;&lt;</span><span style="color:#24292F;"> p.</span><span style="color:#8250DF;">get_future</span><span style="color:#24292F;">().</span><span style="color:#8250DF;">get</span><span style="color:#24292F;">() </span><span style="color:#CF222E;">&lt;&lt;</span><span style="color:#24292F;"> endl;</span></span>
<span class="line"><span style="color:#24292F;">    </span><span style="color:#CF222E;">return</span><span style="color:#24292F;"> </span><span style="color:#0550AE;">0</span><span style="color:#24292F;">;</span></span>
<span class="line"><span style="color:#24292F;">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u5450\uFF0C\u8FD9\u5C31\u662F\u4E86\u3002</p><p>\u8FD9\u6837\u51FD\u6570\u6CA1\u6709\u8FD4\u56DE\u503C\u4E86\uFF0C\u6211\u4EEC\u5728\u51FD\u6570\u8FD4\u56DE\u4E4B\u524D\u7528 get \u62FF\u5230\u7ED3\u679C\uFF0C\u8FD4\u56DE\u7684 <code>future&lt;void&gt; f</code> \u4E5F\u6CA1\u7528\u4E86<del>\uFF0C\u4F46\u4E0D\u5199\u7F16\u8BD1\u5668\u4E0D\u5F00\u5FC3</del>\u3002</p>`,30),o=[e];function c(r,t,y,i,F,u){return n(),a("div",null,o)}const m=s(l,[["render",c]]);export{b as __pageData,m as default};
