import{_ as n,o as s,c as a,a as p}from"./app.0e709f32.js";const d='{"title":"\u4FC4\u7F57\u65AF\u65B9\u5757\u573A\u5730\u538B\u7F29","description":"","frontmatter":{"title":"\u4FC4\u7F57\u65AF\u65B9\u5757\u573A\u5730\u538B\u7F29","date":"2022-05-27T15:30:00.000Z","tags":["rust","\u7B14\u8BB0"]},"headers":[{"level":2,"title":"\u4EE3\u7801","slug":"\u4EE3\u7801"},{"level":2,"title":"python \u7684 raw inflate/deflate","slug":"python-\u7684-raw-inflate-deflate"}],"relativePath":"posts/tetris-field-compress.md"}',t={},e=p(`<hr><h2 id="\u4EE3\u7801" tabindex="-1">\u4EE3\u7801 <a class="header-anchor" href="#\u4EE3\u7801" aria-hidden="true">#</a></h2><div class="language-py line-numbers-mode"><pre><code><span class="token keyword">import</span> zlib
<span class="token keyword">import</span> base64

field_str <span class="token operator">=</span> <span class="token triple-quoted-string string">&quot;&quot;&quot;
IJJJLOO___
IJZZLOO___
IZZLLS____
ITJJSS____
ITTJS_____
ITLLL_____
IJJJ______
IJ________
&quot;&quot;&quot;</span>

blockid <span class="token operator">=</span> <span class="token punctuation">{</span>
    <span class="token string">&#39;_&#39;</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
    <span class="token string">&#39;I&#39;</span><span class="token punctuation">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
    <span class="token string">&#39;L&#39;</span><span class="token punctuation">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
    <span class="token string">&#39;O&#39;</span><span class="token punctuation">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
    <span class="token string">&#39;Z&#39;</span><span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span>
    <span class="token string">&#39;T&#39;</span><span class="token punctuation">:</span> <span class="token number">5</span><span class="token punctuation">,</span>
    <span class="token string">&#39;J&#39;</span><span class="token punctuation">:</span> <span class="token number">6</span><span class="token punctuation">,</span>
    <span class="token string">&#39;S&#39;</span><span class="token punctuation">:</span> <span class="token number">7</span><span class="token punctuation">,</span>
    <span class="token string">&#39;X&#39;</span><span class="token punctuation">:</span> <span class="token number">8</span><span class="token punctuation">,</span>
    <span class="token string">&#39;=&#39;</span><span class="token punctuation">:</span> <span class="token number">9</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>


<span class="token keyword">def</span> <span class="token function">field_from_str</span><span class="token punctuation">(</span>field<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">for</span> line <span class="token keyword">in</span> field<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">&#39;\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token number">10</span><span class="token punctuation">:</span>
            <span class="token keyword">continue</span>
        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            a<span class="token punctuation">,</span> b <span class="token operator">=</span> blockid<span class="token punctuation">[</span>line<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> blockid<span class="token punctuation">[</span>line<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>
            res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>a <span class="token operator">&lt;&lt;</span> <span class="token number">4</span> <span class="token operator">|</span> b<span class="token punctuation">)</span>
    <span class="token keyword">return</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">field_to_base64</span><span class="token punctuation">(</span>field<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>zlib<span class="token punctuation">.</span>compress<span class="token punctuation">(</span>field_from_str<span class="token punctuation">(</span>field<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>


res <span class="token operator">=</span> field_to_base64<span class="token punctuation">(</span>field_str<span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span>
<span class="token keyword">print</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span>

<span class="token keyword">print</span><span class="token punctuation">(</span>zlib<span class="token punctuation">.</span>decompress<span class="token punctuation">(</span>zlib<span class="token punctuation">.</span>compress<span class="token punctuation">(</span>field_from_str<span class="token punctuation">(</span>field_str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br><span class="line-number">39</span><br><span class="line-number">40</span><br><span class="line-number">41</span><br><span class="line-number">42</span><br><span class="line-number">43</span><br><span class="line-number">44</span><br><span class="line-number">45</span><br><span class="line-number">46</span><br><span class="line-number">47</span><br><span class="line-number">48</span><br></div></div><h2 id="python-\u7684-raw-inflate-deflate" tabindex="-1">python \u7684 raw inflate/deflate <a class="header-anchor" href="#python-\u7684-raw-inflate-deflate" aria-hidden="true">#</a></h2><p>raw inflate \u5176\u5B9E\u5C31\u662F\u6CA1\u6709\u5934\u90E8\u548C\u5C3E\u90E8\u7684 inflate\uFF0C\u6709\u4E2A\u5F88\u66B4\u529B\u7684\u5B9E\u73B0\u65B9\u5F0F\u5C31\u662F\u76F4\u63A5\u622A\u6389\u3002</p><div class="language-py line-numbers-mode"><pre><code>zlib<span class="token punctuation">.</span>compress<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><p>\u89E3\u538B\u7684\u65F6\u5019\u9700\u8981\u52A0\u4E2A\u6807\u5FD7\u8BA9 python \u4E0D\u62A5\u9519</p><div class="language-py line-numbers-mode"><pre><code>zlib<span class="token punctuation">.</span>decompress<span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div>`,8),o=[e];function c(l,u,i,r,k,b){return s(),a("div",null,o)}var _=n(t,[["render",c]]);export{d as __pageData,_ as default};
