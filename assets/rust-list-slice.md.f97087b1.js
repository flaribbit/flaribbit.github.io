import{_ as n,c as s,o as a,d as p}from"./app.4924d596.js";const b='{"title":"rust \u6570\u7EC4\u5207\u7247","description":"","frontmatter":{"title":"rust \u6570\u7EC4\u5207\u7247"},"relativePath":"rust-list-slice.md","lastUpdated":1642819587470}',t={},o=p(`<p>\u5173\u4E8E rust \u4E2D\u7684 <code>From</code> \u548C slice \u5207\u7247\uFF0C\u8FD8\u6709 <code>&amp;[]</code> \u548C <code>[].as_ref()</code> \u7684\u533A\u522B\u3002</p><p>\u5DF2\u77E5</p><div class="language-rust line-numbers-mode"><pre><code><span class="token attribute attr-name">#[derive(Debug)]</span>
<span class="token keyword">pub</span> <span class="token keyword">struct</span> <span class="token type-definition class-name">Foo</span> <span class="token punctuation">{</span>
    value<span class="token punctuation">:</span> <span class="token class-name">Vec</span><span class="token operator">&lt;</span><span class="token keyword">i32</span><span class="token operator">&gt;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span>

<span class="token keyword">impl</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
            value<span class="token punctuation">:</span> value<span class="token punctuation">.</span><span class="token function">to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br></div></div><p>\u5947\u602A\u7684\u662F</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">fn</span> <span class="token function-definition function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token class-name">Foo</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">as_ref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//\u53EF\u4EE5</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> foo <span class="token operator">=</span> <span class="token class-name">Foo</span><span class="token punctuation">::</span><span class="token function">from</span><span class="token punctuation">(</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token comment">//\u62A5\u9519</span>
    <span class="token comment">//        ^^^^^^^^^ the trait \`From&lt;&amp;[{integer}; 3]&gt;\` is not implemented for \`Foo\`</span>
    <span class="token macro property">println!</span><span class="token punctuation">(</span><span class="token string">&quot;{:?}&quot;</span><span class="token punctuation">,</span> foo<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u4E3A\u4EC0\u4E48\u5462\uFF0C\u5176\u5B9E\u539F\u56E0\u5F88\u7B80\u5355\uFF0C\u524D\u8005 <code>as_ref()</code> \u8FD4\u56DE\u7C7B\u578B <code>&amp;T</code> \uFF0C\u8FD9\u91CC\u662F <code>&amp;[i32]</code> \uFF1B\u540E\u8005\u7C7B\u578B\u662F <code>&amp;[i32; 3]</code> \uFF0C\u6CE8\u610F\u662F\u6709\u957F\u5EA6\u7684\uFF0C\u957F\u5EA6\u4E5F\u662F\u7C7B\u578B\u7684\u4E00\u90E8\u5206\u3002\u9664\u4E86\u4F7F\u7528 <code>as_ref()</code> \uFF0C\u624B\u52A8 <code>as &amp;[i32]</code> \u4E5F\u53EF\u4EE5\u3002</p><p>\u5982\u679C\u8981\u5E26\u957F\u5EA6\u7684\uFF0C\u53EF\u4EE5\u52A0\u4E00\u4E2A\u7C7B\u578B\u53C2\u6570\uFF0C\u6539\u6210\u8FD9\u6837</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token keyword">const</span> <span class="token class-name">N</span><span class="token punctuation">:</span> <span class="token keyword">usize</span><span class="token operator">&gt;</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">;</span> <span class="token class-name">N</span><span class="token punctuation">]</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">;</span> <span class="token class-name">N</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
            value<span class="token punctuation">:</span> value<span class="token punctuation">.</span><span class="token function">to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><p>\u53E6\u4E00\u4E9B\u5947\u5947\u602A\u602A\u7684\u60F3\u6CD5\uFF0C\u5982\u679C\u8FD9\u6837\u5199\u5462</p><div class="language-rust line-numbers-mode"><pre><code><span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Into</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
<span class="token comment">//           ^ explicit lifetime name needed here</span>
<span class="token comment">// \`&amp;\` without an explicit lifetime name cannot be used here</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token class-name">Foo</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> value<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">//\u884C\u5427\u90A3\u5C31\u52A0\u4E00\u4E2A</span>
<span class="token keyword">impl</span><span class="token operator">&lt;</span><span class="token lifetime-annotation symbol">&#39;a</span><span class="token punctuation">,</span> <span class="token class-name">T</span><span class="token punctuation">:</span> <span class="token class-name">Into</span><span class="token operator">&lt;</span><span class="token operator">&amp;</span><span class="token lifetime-annotation symbol">&#39;a</span> <span class="token punctuation">[</span><span class="token keyword">i32</span><span class="token punctuation">]</span><span class="token operator">&gt;&gt;</span> <span class="token class-name">From</span><span class="token operator">&lt;</span><span class="token class-name">T</span><span class="token operator">&gt;</span> <span class="token keyword">for</span> <span class="token class-name">Foo</span> <span class="token punctuation">{</span>
    <span class="token keyword">fn</span> <span class="token function-definition function">from</span><span class="token punctuation">(</span>value<span class="token punctuation">:</span> <span class="token class-name">T</span><span class="token punctuation">)</span> <span class="token punctuation">-&gt;</span> <span class="token keyword">Self</span> <span class="token punctuation">{</span>
        <span class="token class-name">Foo</span> <span class="token punctuation">{</span> value<span class="token punctuation">:</span> value<span class="token punctuation">.</span><span class="token function">into</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">to_vec</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br></div></div><p>\u53EF\u4EE5\u662F\u53EF\u4EE5\uFF0C\u4F46\u5E76\u6CA1\u6709\u4EC0\u4E48\u5375\u7528\uFF0C\u6CA1\u6709\u5176\u4ED6\u7C7B\u578B\uFF08\u81F3\u5C11 <code>&amp;[i32; N]</code> \u4E0D\u884C\uFF09\u5230 <code>&amp;[i32]</code> \u7684\u81EA\u52A8\u8F6C\u6362\uFF08\u8FD9\u4E0D\u5C31\u7ED5\u56DE\u521A\u5F00\u59CB\u7684\u95EE\u9898\u4E86\uFF09\u3002</p><p>\u6700\u540E\uFF0C <code>as_ref()</code> \u771F\u9999\uFF0C\u957F\u5EA6\u722C\u3002</p>`,12),e=[o];function c(l,u,i,k,r,m){return a(),s("div",null,e)}var f=n(t,[["render",c]]);export{b as __pageData,f as default};
